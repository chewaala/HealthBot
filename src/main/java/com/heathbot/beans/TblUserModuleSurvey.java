package com.heathbot.beans;
// Generated Jan 18, 2018 5:18:56 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * TblUserModuleSurvey generated by hbm2java
 */
@Entity
@Table(name = "tbl_user_module_survey", catalog = "healthbot")
public class TblUserModuleSurvey implements java.io.Serializable {

	private Integer userModuleSurveyId;
	private TblQuestion tblQuestion;
	private TblUsers tblUsers;
	private TblModules tblModules;
	private TblAnswers tblAnswers;

	public TblUserModuleSurvey() {
	}

	public TblUserModuleSurvey(TblQuestion tblQuestion, TblUsers tblUsers,
			TblModules tblModules, TblAnswers tblAnswers) {
		this.tblQuestion = tblQuestion;
		this.tblUsers = tblUsers;
		this.tblModules = tblModules;
		this.tblAnswers = tblAnswers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_module_survey_id", unique = true, nullable = false)
	public Integer getUserModuleSurveyId() {
		return this.userModuleSurveyId;
	}

	public void setUserModuleSurveyId(Integer userModuleSurveyId) {
		this.userModuleSurveyId = userModuleSurveyId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "question_id")
	public TblQuestion getTblQuestion() {
		return this.tblQuestion;
	}

	public void setTblQuestion(TblQuestion tblQuestion) {
		this.tblQuestion = tblQuestion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public TblUsers getTblUsers() {
		return this.tblUsers;
	}

	public void setTblUsers(TblUsers tblUsers) {
		this.tblUsers = tblUsers;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "module_id")
	public TblModules getTblModules() {
		return this.tblModules;
	}

	public void setTblModules(TblModules tblModules) {
		this.tblModules = tblModules;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "answer_id")
	public TblAnswers getTblAnswers() {
		return this.tblAnswers;
	}

	public void setTblAnswers(TblAnswers tblAnswers) {
		this.tblAnswers = tblAnswers;
	}

}
